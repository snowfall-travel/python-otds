name: CI

on:
  merge_group:
  push:
    branches:
      - 'main'
    tags: [ 'v*' ]
  pull_request:
    branches:
      - 'main'

permissions: {}

jobs:
  lint:
    name: Linter
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'
        cache: 'pip'
        cache-dependency-path: '**/requirements*.txt'
    - name: Install dependencies
      uses: py-actions/py-dependency-install@v4
      with:
        path: requirements.txt
    - name: Install itself
      run: |
        pip install .
    - name: Prepare twine checker
      run: |
        pip install -U build twine wheel
        python -m build
    - name: Run twine checker
      run: twine check dist/*

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: [lint]
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'
    - name: Install dependencies
      run:
        python -m pip install -U pip wheel setuptools build twine
    - name: Build dists
      run: |
        python -m build
    - name: PyPI upload
      uses: pypa/gh-action-pypi-publish@release/v1
    - name: GitHub Release
      uses: ncipollo/release-action@v1
      with:
        name: otds
        artifacts: dist/*
        token: ${{ secrets.GITHUB_TOKEN }}
